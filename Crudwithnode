///REST APIS


//API-ROOT, BASE URL

// Read GET /Products
app.get('/Products', (req, res) => {
  res.json(Products)
})

// Read GET /Products:id
app.get('/Products/:id', (req, res) => {
  const id = +req.params.id;
  const product = Products.find(p => p.id == id)
  res.json(product)
})

// Create Post /Product
app.post('/Products',(req, res) => {
  console.log(req.body);
  Products.push(req.body)
  res.json(req.body)
})

// Update PUT /Products /:id
app.put('/Products/:id',(req, res) => {
  const id = +req.params.id;
  const ProductIndex = Products.findIndex(p => p.id === id)
  Products.splice(ProductIndex, 1, {...req.body, id: id})
  res.status(201).json()
})

// Update PATCH /Products /:id
app.patch('/Products/:id',(req, res) => {
  const id = +req.params.id;
  const ProductIndex = Products.findIndex(p => p.id === id)
  const product = Products[ProductIndex] 
  //console.log(product)
  Products.splice(ProductIndex, 1, {...product, ...req.body})
  //console.log(product)
  res.status(201).json()
})

// Delete DELETE /Products /:id
app.delete('/Products/:id',(req, res) => {
  const id = +req.params.id;
  const ProductIndex = Products.findIndex(p => p.id === id)
  const product = Products[ProductIndex]
  Products.splice(ProductIndex, 1)
  res.status(201).json(product)
})
